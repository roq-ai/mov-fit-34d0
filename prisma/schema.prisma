generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model exercise {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  reps       Int
  sets       Int
  rest_time  Int
  timestamp  Int
  workout_id String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  workout    workout? @relation(fields: [workout_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model media {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String    @db.VarChar(255)
  subtitle_file String    @db.VarChar(255)
  user_id       String?   @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  user          user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  workout       workout[]
}

model user {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String       @unique @db.VarChar(255)
  firstName   String?      @db.VarChar(255)
  lastName    String?      @db.VarChar(255)
  roq_user_id String       @db.VarChar(255)
  tenant_id   String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  media       media[]
  workout     workout[]
  workout_er  workout_er[]
}

model workout {
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  intensity_level String     @db.VarChar(255)
  workout_type    String     @db.VarChar(255)
  equipment       String?    @db.VarChar(255)
  media_id        String?    @db.Uuid
  user_id         String?    @db.Uuid
  created_at      DateTime   @default(now()) @db.Timestamp(6)
  updated_at      DateTime   @default(now()) @db.Timestamp(6)
  exercise        exercise[]
  media           media?     @relation(fields: [media_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user?      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model workout_er {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
